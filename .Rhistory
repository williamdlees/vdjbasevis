clip_db = kappa[,c("SAMP","V_CALL")]
for (samp in unique(clip_db$SAMP)) {
clip_db_sub <- clip_db[clip_db$SAMP == samp, ]
# V gene distribution
V_SINGLE <- grep(pattern = ",", clip_db_sub$V_CALL, invert = T)
for(gene in GENE.loc.tmp){
if(!grepl("D", gene)){
allele_calls <- grep(gene,clip_db_sub$V_CALL[V_SINGLE],value=T)
}else{
allele_calls <- grep(gsub("D","E",gene),clip_db_sub$V_CALL[V_SINGLE],value=T)
allele_calls <- allele_calls[allele_calls %in% old_g[[gene]]]
allele_calls <- gsub("E","D",allele_calls)
}
if(grepl("E",gene)) allele_calls[!allele_calls==new_g[gene]]
V_CALLS <- table(allele_calls)
V_CALLS_freq <- V_CALLS/sum(V_CALLS)
for (v in unique(allele_calls)) {
if (v %in% names(V_CALLS)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], V_CALLS_freq[v])
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
} else {
if (grepl(paste0(chain, "V"), v)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], 0)
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
}
}
}}
}
GENE.usage.df[GENE.usage.df$GENE=="IGKV6D-21",]
GENE.usage.df[GENE.usage.df$GENE==gene,]
gene
allele_calls <- grep(gsub("D","E",gene),clip_db_sub$V_CALL[V_SINGLE],value=T)
allele_calls <- allele_calls[allele_calls %in% old_g[[gene]]]
allele_calls <- gsub("E","D",allele_calls)
grepl("E",gene)
V_CALLS <- table(allele_calls)
V_CALLS_freq <- V_CALLS/sum(V_CALLS)
unique(allele_calls)
V_CALLS
allele_calls <- grep(gsub("D","E",gene),clip_db_sub$V_CALL[V_SINGLE],value=T)
allele_calls <- allele_calls[allele_calls %in% old_g[[gene]]]
allele_calls <- gsub("E","D",allele_calls)
table(allele_calls)
old_g[[gene]]
allele_calls <- grep(gsub("D","E",gene),clip_db_sub$V_CALL[V_SINGLE],value=T)
table(allele_calls)
v
GENE.usage[[v]]
gusage
gusage[[v]]
v
gusage[v]
GENE.usage[[v]]
gusage <- unlist(GENE.usage)
gusage.gene <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 1)
gusage.samp <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 2)
gusage.gene
grep("D",gusage.gene,value=T)
GENE.usage.df <- data.frame(SUBJECT = gusage.samp, GENE = sapply(strsplit(gusage.gene, "*", fixed = T), "[", 1),
ALLELE = gusage.gene, FRAC = gusage, stringsAsFactors = F, row.names = NULL)
GENE.loc.NoPseudo
ALLELE.loc <-  names(unlist(GERM[[chain]]$V_CALL))
GENE.loc.tmp <- unique(sapply(strsplit(ALLELE.loc, "*", fixed = T), "[", 1))
GENE.loc.tmp <- GENE.loc.tmp[!grepl("[OR|NL]", GENE.loc.tmp)]
GENE.loc.tmp <- c(GENE.loc.tmp[!(GENE.loc.tmp %in% PSEUDO$IGK)],"IGKV1D-13","IGKV6D-21","IGKV1D-12")
GENE.usage <- vector("list", length = length(ALLELE.loc))
names(GENE.usage) <- ALLELE.loc
old_g <- list("IGKV1D-13"=c("IGKV1E-13*03","IGKV1E-13*02"),"IGKV6D-21"=c("IGKV6E-21*03","IGKV6E-21*01"),"IGKV1D-12"=c("IGKV1E-12*03","IGKV1E-12*02"))
new_g <- c("IGKV1E-13"="IGKV1E-13*03","IGKV6E-21"="IGKV6E-21*03","IGKV1E-12"="IGKV1E-12*03")
clip_db = kappa[,c("SAMP","V_CALL")]
for (samp in unique(clip_db$SAMP)) {
clip_db_sub <- clip_db[clip_db$SAMP == samp, ]
# V gene distribution
V_SINGLE <- grep(pattern = ",", clip_db_sub$V_CALL, invert = T)
for(gene in GENE.loc.tmp){
if(!grepl("D", gene)){
allele_calls <- grep(gene,clip_db_sub$V_CALL[V_SINGLE],value=T)
}else{
allele_calls <- grep(gsub("D","E",gene),clip_db_sub$V_CALL[V_SINGLE],value=T)
allele_calls <- allele_calls[allele_calls %in% old_g[[gene]]]
allele_calls <- gsub("E","D",allele_calls)
}
if(grepl("E",gene)) allele_calls[!allele_calls==new_g[gene]]
V_CALLS <- table(allele_calls)
V_CALLS_freq <- V_CALLS/sum(V_CALLS)
for (v in unique(allele_calls)) {
if (v %in% names(V_CALLS)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], V_CALLS_freq[v])
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
} else {
if (grepl(paste0(chain, "V"), v)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], 0)
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
}
}
}}
}
gusage <- unlist(GENE.usage)
gusage.gene <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 1)
gusage.samp <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 2)
GENE.usage.df <- data.frame(SUBJECT = gusage.samp, GENE = sapply(strsplit(gusage.gene, "*", fixed = T), "[", 1),
ALLELE = gusage.gene, FRAC = gusage, stringsAsFactors = F, row.names = NULL)
GENE.usage.df <- GENE.usage.df %>% filter(.data$GENE %in% c(GENE.loc.NoPseudo,"IGKV1D-13","IGKV6D-21","IGKV1D-12"))
genes <- grep("[E|D]",GENE.loc.tmp,value=T)
genes
gene <- c("IGKV1[D|E]-13","IGKV6[D|E]-21","IGKV1[D|E]-12")
g  = gene[2]
df <- GENE.usage.df %>% filter(grepl(g,GENE)) %>% group_by(SUBJECT, GENE) %>%
mutate(group = paste0(gsub(paste0(GENE,"[*]"),"",ALLELE),collapse="."), Study = ifelse(grepl("L",SUBJECT), "F", "C")) #%>%
df
ggplot(df %>% filter(grepl(g,GENE)), aes(x = ALLELE, y = FRAC, group = SUBJECT)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(colour = group, linetype = group)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15) + #aes_string(fill="FAM"), colour='black',
scale_fill_manual(name='Study', values = c('mediumslateblue','saddlebrown'), drop=F) + #scale_colour_discrete("") +
#scale_linetype_discrete(name = "alleles", labels = c("01.03","01.02.03","02.03","01.02","01")) +
labs(color  = "Allele", linetype = "Allele") +
ylab('Frequency') + xlab('Gene') + #labs(title = title) +
theme(axis.text.y = element_text(size=16), axis.title = element_text(size=16),
axis.text.x = element_text(size=14,angle = 90, hjust = 1,vjust=0.5), #legend.position = 'none',
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black")) #+ facet_wrap(.~GENE, scales = "free", ncol = 3)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = ALLELE, y = FRAC, group = SUBJECT)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(colour = group, linetype = group))
df
ggplot(df %>% filter(grepl(g,GENE)), aes(x = ALLELE, y = FRAC, group = SUBJECT)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(colour = interaction(group,GENE), linetype = interaction(group,GENE)))
ggplot(df %>% filter(grepl(g,GENE)), aes(x = ALLELE, y = FRAC, group = SUBJECT)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
new_g[gene]
gene="IGKV6E-21"
new_g[gene]
GENE.usage <- vector("list", length = length(ALLELE.loc))
names(GENE.usage) <- ALLELE.loc
old_g <- list("IGKV1D-13"=c("IGKV1E-13*03","IGKV1E-13*02"),"IGKV6D-21"=c("IGKV6E-21*03","IGKV6E-21*01"),"IGKV1D-12"=c("IGKV1E-12*03","IGKV1E-12*02"))
new_g <- c("IGKV1E-13"="IGKV1E-13*03","IGKV6E-21"="IGKV6E-21*03","IGKV1E-12"="IGKV1E-12*03")
clip_db = kappa[,c("SAMP","V_CALL")]
for (samp in unique(clip_db$SAMP)) {
clip_db_sub <- clip_db[clip_db$SAMP == samp, ]
# V gene distribution
V_SINGLE <- grep(pattern = ",", clip_db_sub$V_CALL, invert = T)
for(gene in GENE.loc.tmp){
if(!grepl("D", gene)){
allele_calls <- grep(gene,clip_db_sub$V_CALL[V_SINGLE],value=T)
}else{
allele_calls <- grep(gsub("D","E",gene),clip_db_sub$V_CALL[V_SINGLE],value=T)
allele_calls <- allele_calls[allele_calls %in% old_g[[gene]]]
allele_calls <- gsub("E","D",allele_calls)
}
if(grepl("E",gene)) allele_calls[allele_call!==new_g[gene]]
V_CALLS <- table(allele_calls)
V_CALLS_freq <- V_CALLS/sum(V_CALLS)
for (v in unique(allele_calls)) {
if (v %in% names(V_CALLS)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], V_CALLS_freq[v])
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
} else {
if (grepl(paste0(chain, "V"), v)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], 0)
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
}
}
}}
}
gusage <- unlist(GENE.usage)
gusage.gene <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 1)
gusage.samp <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 2)
GENE.usage.df <- data.frame(SUBJECT = gusage.samp, GENE = sapply(strsplit(gusage.gene, "*", fixed = T), "[", 1),
ALLELE = gusage.gene, FRAC = gusage, stringsAsFactors = F, row.names = NULL)
GENE.usage.df <- GENE.usage.df %>% filter(.data$GENE %in% c(GENE.loc.NoPseudo,"IGKV1D-13","IGKV6D-21","IGKV1D-12"))
ALLELE.loc <-  names(unlist(GERM[[chain]]$V_CALL))
GENE.loc.tmp <- unique(sapply(strsplit(ALLELE.loc, "*", fixed = T), "[", 1))
GENE.loc.tmp <- GENE.loc.tmp[!grepl("[OR|NL]", GENE.loc.tmp)]
GENE.loc.tmp <- c(GENE.loc.tmp[!(GENE.loc.tmp %in% PSEUDO$IGK)],"IGKV1D-13","IGKV6D-21","IGKV1D-12")
GENE.usage <- vector("list", length = length(ALLELE.loc))
names(GENE.usage) <- ALLELE.loc
old_g <- list("IGKV1D-13"=c("IGKV1E-13*03","IGKV1E-13*02"),"IGKV6D-21"=c("IGKV6E-21*03","IGKV6E-21*01"),"IGKV1D-12"=c("IGKV1E-12*03","IGKV1E-12*02"))
new_g <- c("IGKV1E-13"="IGKV1E-13*03","IGKV6E-21"="IGKV6E-21*03","IGKV1E-12"="IGKV1E-12*03")
clip_db = kappa[,c("SAMP","V_CALL")]
for (samp in unique(clip_db$SAMP)) {
clip_db_sub <- clip_db[clip_db$SAMP == samp, ]
# V gene distribution
V_SINGLE <- grep(pattern = ",", clip_db_sub$V_CALL, invert = T)
for(gene in GENE.loc.tmp){
if(!grepl("D", gene)){
allele_calls <- grep(gene,clip_db_sub$V_CALL[V_SINGLE],value=T)
}else{
allele_calls <- grep(gsub("D","E",gene),clip_db_sub$V_CALL[V_SINGLE],value=T)
allele_calls <- allele_calls[allele_calls %in% old_g[[gene]]]
allele_calls <- gsub("E","D",allele_calls)
}
if(grepl("E",gene)) allele_calls[allele_call!=new_g[gene]]
V_CALLS <- table(allele_calls)
V_CALLS_freq <- V_CALLS/sum(V_CALLS)
for (v in unique(allele_calls)) {
if (v %in% names(V_CALLS)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], V_CALLS_freq[v])
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
} else {
if (grepl(paste0(chain, "V"), v)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], 0)
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
}
}
}}
}
gusage <- unlist(GENE.usage)
gusage.gene <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 1)
gusage.samp <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 2)
GENE.usage.df <- data.frame(SUBJECT = gusage.samp, GENE = sapply(strsplit(gusage.gene, "*", fixed = T), "[", 1),
ALLELE = gusage.gene, FRAC = gusage, stringsAsFactors = F, row.names = NULL)
GENE.usage.df <- GENE.usage.df %>% filter(.data$GENE %in% c(GENE.loc.NoPseudo,"IGKV1D-13","IGKV6D-21","IGKV1D-12"))
ALLELE.loc <-  names(unlist(GERM[[chain]]$V_CALL))
GENE.loc.tmp <- unique(sapply(strsplit(ALLELE.loc, "*", fixed = T), "[", 1))
GENE.loc.tmp <- GENE.loc.tmp[!grepl("[OR|NL]", GENE.loc.tmp)]
GENE.loc.tmp <- c(GENE.loc.tmp[!(GENE.loc.tmp %in% PSEUDO$IGK)],"IGKV1D-13","IGKV6D-21","IGKV1D-12")
GENE.usage <- vector("list", length = length(ALLELE.loc))
names(GENE.usage) <- ALLELE.loc
old_g <- list("IGKV1D-13"=c("IGKV1E-13*03","IGKV1E-13*02"),"IGKV6D-21"=c("IGKV6E-21*03","IGKV6E-21*01"),"IGKV1D-12"=c("IGKV1E-12*03","IGKV1E-12*02"))
new_g <- c("IGKV1E-13"="IGKV1E-13*03","IGKV6E-21"="IGKV6E-21*03","IGKV1E-12"="IGKV1E-12*03")
clip_db = kappa[,c("SAMP","V_CALL")]
for (samp in unique(clip_db$SAMP)) {
clip_db_sub <- clip_db[clip_db$SAMP == samp, ]
# V gene distribution
V_SINGLE <- grep(pattern = ",", clip_db_sub$V_CALL, invert = T)
for(gene in GENE.loc.tmp){
if(!grepl("D", gene)){
allele_calls <- grep(gene,clip_db_sub$V_CALL[V_SINGLE],value=T)
}else{
allele_calls <- grep(gsub("D","E",gene),clip_db_sub$V_CALL[V_SINGLE],value=T)
allele_calls <- allele_calls[allele_calls %in% old_g[[gene]]]
allele_calls <- gsub("E","D",allele_calls)
}
if(grepl("E",gene)) allele_calls[allele_calls!=new_g[gene]]
V_CALLS <- table(allele_calls)
V_CALLS_freq <- V_CALLS/sum(V_CALLS)
for (v in unique(allele_calls)) {
if (v %in% names(V_CALLS)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], V_CALLS_freq[v])
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
} else {
if (grepl(paste0(chain, "V"), v)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], 0)
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
}
}
}}
}
gusage <- unlist(GENE.usage)
gusage.gene <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 1)
gusage.samp <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 2)
GENE.usage.df <- data.frame(SUBJECT = gusage.samp, GENE = sapply(strsplit(gusage.gene, "*", fixed = T), "[", 1),
ALLELE = gusage.gene, FRAC = gusage, stringsAsFactors = F, row.names = NULL)
g
df <- GENE.usage.df %>% filter(grepl(g,GENE)) %>% group_by(SUBJECT, GENE) %>%
mutate(group = paste0(gsub(paste0(GENE,"[*]"),"",ALLELE),collapse="."), Study = ifelse(grepl("L",SUBJECT), "F", "C")) #%>%
ggplot(df %>% filter(grepl(g,GENE)), aes(x = ALLELE, y = FRAC, group = SUBJECT)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
ALLELE.loc <-  names(unlist(GERM[[chain]]$V_CALL))
GENE.loc.tmp <- unique(sapply(strsplit(ALLELE.loc, "*", fixed = T), "[", 1))
GENE.loc.tmp <- GENE.loc.tmp[!grepl("[OR|NL]", GENE.loc.tmp)]
GENE.loc.tmp <- c(GENE.loc.tmp[!(GENE.loc.tmp %in% PSEUDO$IGK)],"IGKV1D-13","IGKV6D-21","IGKV1D-12")
GENE.usage <- vector("list", length = length(ALLELE.loc))
names(GENE.usage) <- ALLELE.loc
old_g <- list("IGKV1D-13"=c("IGKV1E-13*03","IGKV1E-13*02"),"IGKV6D-21"=c("IGKV6E-21*03","IGKV6E-21*01"),"IGKV1D-12"=c("IGKV1E-12*03","IGKV1E-12*02"))
new_g <- c("IGKV1E-13"="IGKV1E-13*03","IGKV6E-21"="IGKV6E-21*03","IGKV1E-12"="IGKV1E-12*03")
clip_db = kappa[,c("SAMP","V_CALL")]
for (samp in unique(clip_db$SAMP)) {
clip_db_sub <- clip_db[clip_db$SAMP == samp, ]
# V gene distribution
V_SINGLE <- grep(pattern = ",", clip_db_sub$V_CALL, invert = T)
for(gene in GENE.loc.tmp){
if(!grepl("D", gene)){
allele_calls <- grep(gene,clip_db_sub$V_CALL[V_SINGLE],value=T)
}else{
allele_calls <- grep(gsub("D","E",gene),clip_db_sub$V_CALL[V_SINGLE],value=T)
allele_calls <- allele_calls[allele_calls %in% old_g[[gene]]]
allele_calls <- gsub("E","D",allele_calls)
}
if(grepl("E",gene)) allele_calls <- allele_calls[allele_calls!=new_g[gene]]
V_CALLS <- table(allele_calls)
V_CALLS_freq <- V_CALLS/sum(V_CALLS)
for (v in unique(allele_calls)) {
if (v %in% names(V_CALLS)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], V_CALLS_freq[v])
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
} else {
if (grepl(paste0(chain, "V"), v)) {
GENE.usage[[v]] <- c(GENE.usage[[v]], 0)
names(GENE.usage[[v]])[length(GENE.usage[[v]])] <- samp
}
}
}}
}
gusage <- unlist(GENE.usage)
gusage.gene <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 1)
gusage.samp <- sapply(strsplit(names(unlist(GENE.usage)), ".", fixed = T), "[", 2)
GENE.usage.df <- data.frame(SUBJECT = gusage.samp, GENE = sapply(strsplit(gusage.gene, "*", fixed = T), "[", 1),
ALLELE = gusage.gene, FRAC = gusage, stringsAsFactors = F, row.names = NULL)
GENE.usage.df <- GENE.usage.df %>% filter(.data$GENE %in% c(GENE.loc.NoPseudo,"IGKV1D-13","IGKV6D-21","IGKV1D-12"))
df <- GENE.usage.df %>% filter(grepl(g,GENE)) %>% group_by(SUBJECT, GENE) %>%
mutate(group = paste0(gsub(paste0(GENE,"[*]"),"",ALLELE),collapse="."), Study = ifelse(grepl("L",SUBJECT), "F", "C")) #%>%
ggplot(df %>% filter(grepl(g,GENE)), aes(x = ALLELE, y = FRAC, group = SUBJECT)) +
geom_line(aes(colour = interaction(group,GENE), linetype = interaction(group,GENE)))
ggplot(df %>% filter(grepl(g,GENE)), aes(x = ALLELE, y = FRAC, group = SUBJECT)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
df
ggplot(df %>% filter(grepl(g,GENE)), aes(x = ALLELE, y = FRAC, group = SUBJECT)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(colour = interaction(group,GENE))) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15) + #aes_string(fill="FAM"), colour='black',
ylab('Frequency')
df <- GENE.usage.df %>% filter(grepl(g,GENE)) %>% group_by(SUBJECT, GENE) %>%
mutate(group = paste0(GENE,'.',gsub(paste0(GENE,"[*]"),"",ALLELE),collapse="."), Study = ifelse(grepl("L",SUBJECT), "F", "C")) #%>%
ggplot(df %>% filter(grepl(g,GENE)), aes(x = ALLELE, y = FRAC, group = SUBJECT)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(colour = interaction(group,GENE))) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = ALLELE, y = FRAC, group = SUBJECT)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(colour = interaction(group,SUBJECT))) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
figF_df
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(GENE,group), y = FRAC)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,group), y = FRAC))
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,group), y = FRAC)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(colour = interaction(ALLELE,SUBJECT))) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(colour = interaction(GENE,SUBJECT))) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(group = interaction(ALLELE,SUBJECT))) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(group = interaction(group,SUBJECT))) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(group = interaction(group,SUBJECT)), linetype = 2, color = "forestgreen") +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15) + #aes_string(fill="FAM"), colour='black',
scale_fill_manual(name='Study', values = c('mediumslateblue','saddlebrown'), drop=F)
GENE.usage.df %>% filter(grepl(g,GENE)) %>% group_by(SUBJECT, GENE) %>%
mutate(group = paste0(GENE,'.',gsub(paste0(GENE,"[*]"),"",ALLELE),collapse="."), Study = ifelse(grepl("L",SUBJECT), "F", "C")) %>%
group_by(GENE,group,SUBJECT) %>% mutate(line = ifelse(FRAC==max(FRAC),"forestgreen","darkorange"))
GENE.usage.df %>% filter(grepl(g,GENE)) %>% group_by(SUBJECT, GENE) %>%
mutate(group = paste0(GENE,'.',gsub(paste0(GENE,"[*]"),"",ALLELE),collapse="."), Study = ifelse(grepl("L",SUBJECT), "F", "C")) %>%
group_by(GENE,group,SUBJECT) %>% mutate(line = ifelse(FRAC==max(FRAC),ifelse(grepl("01",ALLELE),"forestgreen","darkorange")))
GENE.usage.df %>% filter(grepl(g,GENE)) %>% group_by(SUBJECT, GENE) %>%
mutate(group = paste0(GENE,'.',gsub(paste0(GENE,"[*]"),"",ALLELE),collapse="."), Study = ifelse(grepl("L",SUBJECT), "F", "C")) %>%
group_by(GENE,group,SUBJECT) %>% mutate(line = ifelse(FRAC==max(FRAC) & grepl("01",ALLELE),"forestgreen","darkorange"))
df <- GENE.usage.df %>% filter(grepl(g,GENE)) %>% group_by(SUBJECT, GENE) %>%
mutate(group = paste0(GENE,'.',gsub(paste0(GENE,"[*]"),"",ALLELE),collapse="."), Study = ifelse(grepl("L",SUBJECT), "F", "C")) %>%
group_by(GENE,group,SUBJECT) %>% mutate(line = ifelse(FRAC==max(FRAC) & grepl("01",ALLELE),"forestgreen","darkorange"))
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(group = interaction(group,SUBJECT), color = line), linetype = 3) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15) + #aes_string(fill="FAM"), colour='black',
scale_fill_manual(name='Study', values = c('mediumslateblue','saddlebrown'), drop=F) + #scale_colour_discrete("") +
#scale_linetype_discrete(name = "alleles", labels = c("01.03","01.02.03","02.03","01.02","01")) +
labs(color  = "Allele", linetype = "Allele") +
ylab('Frequency') + xlab('Gene') + #labs(title = title) +
theme(axis.text.y = element_text(size=16), axis.title = element_text(size=16),
axis.text.x = element_text(size=14,angle = 90, hjust = 1,vjust=0.5), #legend.position = 'none',
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black")) #+ facet_wrap(.~GENE, scales = "free", ncol = 3)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(group = interaction(group,SUBJECT), color = line)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(group = interaction(group,SUBJECT), colour = line, linetype = line)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15) + #aes_string(fill="FAM"), colour='black',
scale_fill_manual(name='Study', values = c('mediumslateblue','saddlebrown'), drop=F) + #scale_colour_discrete("") +
#scale_linetype_discrete(name = "alleles", labels = c("01.03","01.02.03","02.03","01.02","01")) +
labs(color  = "Allele", linetype = "Allele") +
ylab('Frequency') + xlab('Gene') + #labs(title = title) +
theme(axis.text.y = element_text(size=16), axis.title = element_text(size=16),
axis.text.x = element_text(size=14,angle = 90, hjust = 1,vjust=0.5), #legend.position = 'none',
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black")) #+ facet_wrap(.~GENE, scales = "free", ncol = 3)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(group = interaction(group,SUBJECT), colour = line, linetype = line)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15) + #aes_string(fill="FAM"), colour='black',
scale_fill_manual(name='Study', values = c('mediumslateblue','saddlebrown'), drop=F) + #scale_colour_discrete("") +
#scale_linetype_discrete(name = "alleles", labels = c("01.03","01.02.03","02.03","01.02","01")) +
#labs(color  = "Allele", linetype = "Allele") +
ylab('Frequency') + xlab('Gene') + #labs(title = title) +
theme(axis.text.y = element_text(size=16), axis.title = element_text(size=16),
axis.text.x = element_text(size=14,angle = 90, hjust = 1,vjust=0.5), #legend.position = 'none',
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black")) #+ facet_wrap(.~GENE, scales = "free", ncol = 3)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(group = interaction(group,SUBJECT), colour = line, linetype = line))
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(group = interaction(group,SUBJECT), linetype = line)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15) + #aes_string(fill="FAM"), colour='black',
scale_fill_manual(name='Study', values = c('mediumslateblue','saddlebrown'), drop=F) + #scale_colour_discrete("") +
#scale_linetype_discrete(name = "alleles", labels = c("01.03","01.02.03","02.03","01.02","01")) +
#labs(color  = "Allele", linetype = "Allele") +
ylab('Frequency') + xlab('Gene') + #labs(title = title) +
theme(axis.text.y = element_text(size=16), axis.title = element_text(size=16),
axis.text.x = element_text(size=14,angle = 90, hjust = 1,vjust=0.5), #legend.position = 'none',
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black")) #+ facet_wrap(.~GENE, scales = "free", ncol = 3)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(group = interaction(group,SUBJECT), colour = line)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15) + #aes_string(fill="FAM"), colour='black',
scale_fill_manual(name='Study', values = c('mediumslateblue','saddlebrown'), drop=F) + #scale_colour_discrete("") +
#scale_linetype_discrete(name = "alleles", labels = c("01.03","01.02.03","02.03","01.02","01")) +
#labs(color  = "Allele", linetype = "Allele") +
ylab('Frequency') + xlab('Gene') + #labs(title = title) +
theme(axis.text.y = element_text(size=16), axis.title = element_text(size=16),
axis.text.x = element_text(size=14,angle = 90, hjust = 1,vjust=0.5), #legend.position = 'none',
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black")) #+ facet_wrap(.~GENE, scales = "free", ncol = 3)
kappa2 <- data.table::rbindlist(lapply(LL.Data,function(x) x[grepl("K",x$V_CALL) & x$CONSCOUNT >=2,]), fill = T)
table(kappa2$FUNCTIONAL)
ff <- grep("6E-21[*]01",kappa$V_CALL)
table(kappa$FUNCTIONAL[ff])
table(kappa2$FUNCTIONAL[ff])
33+80
table(kappa2$V_CALL[!kappa2$FUNCTIONAL])
V320 <- grep("KV3-20",kappa2$V_CALL)
table(kappa2$V_CALL[v320])
table(kappa2$V_CALL[V320])
V320 <- grep("KV3-20[*]01$",kappa2$V_CALL)
table(kappa2$V_CALL[V320])
table(kappa2$STOP[V320])
table(kappa2$MUTATED_INVARIANT[V320])
table(kappa2$INDELS[V320])
table(kappa2$FUNCTIONAL[V320])
table(kappa2$IN_FRAME[V320])
table(kappa2$V_GERM_START_VDJ[V320])
table(kappa2$J_CALL[V320])
table(kappa2$V_CALL[!kappa2$FUNCTIONAL])
kv41 <- grep("KV4-1[*]01$",kappa2$V_CALL)
table(kappa2$STOP[kv41])
table(kappa2$INDELS[kv41])
table(kappa2$IN_FRAME[kv41])
LLL <- data.table::rbindlist(LL.Data,fill = T)
table(LLL$CONSCOUNT)
nrow(LLL)
sum(LLL$CONSCOUNT>=2)
2814148/3397516
L.tmp <- (LLL$CONSCOUNT<2)
L.tmp <- (LLL[LLL$CONSCOUNT<2,])
sum(L.tmp$V_GERM_START_VDJ==1)
nrow(L.tmp)
422345/583368
View(L.Data)
remove(LL.Data)
remove(L.Data)
ggplot(df %>% filter(grepl(g,GENE)), aes(x = interaction(ALLELE,GENE), y = FRAC)) +
#geom_boxplot(outlier.size=NA,outlier.shape=NA) +
geom_line(aes(group = interaction(group,SUBJECT), colour = line)) +
geom_point(aes(fill = Study), position =  position_dodge(0.01),shape=21,size=1.75,stroke =0.15) + #aes_string(fill="FAM"), colour='black',
scale_fill_manual(name='Study', values = c('mediumslateblue','saddlebrown'), drop=F) + #scale_colour_discrete("") +
#scale_linetype_discrete(name = "alleles", labels = c("01.03","01.02.03","02.03","01.02","01")) +
#labs(color  = "Allele", linetype = "Allele") +
ylab('Frequency') + xlab('Gene') + #labs(title = title) +
theme(axis.text.y = element_text(size=16), axis.title = element_text(size=16),
axis.text.x = element_text(size=14,angle = 90, hjust = 1,vjust=0.5), #legend.position = 'none',
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(),
axis.line = element_line(colour = "black")) #+ facet_wrap(.~GENE, scales = "free", ncol = 3)
head(df)
unique(df$group)
head(df[df$group=="IGKV6D-21.01.IGKV6D-21.03",])
?color_scheme
??color_scheme
load("/home/ayelet/.cache/.fr-OftylQ/ggmsa/R/sysdata.rda")
View(scheme_NT)
color = 'Chemistry_NT'
scheme_NT[[color]]
col <- scheme_NT[[color]]
names(col) <- scheme_NT[,1] ## The name of bases.
col
scheme <- color_scheme_(color)
## @param color A data frame created manually for color assignment.
color_scheme_ <- function(color){
if(grepl("AA", color)){
col<- scheme_AA[[color]]
names(col) <- scheme_AA[,1]  ##  The name of aminio acid.
}
else{
col <- scheme_NT[[color]]
names(col) <- scheme_NT[,1] ## The name of bases.
}
return(col)
}
scheme <- color_scheme_(color)
y$color <- scheme[y$character]
scheme
?geom
??geom
install.packages("ggplotify")
